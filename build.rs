extern crate cbindgen;

const GENERATE_WARNING: &str = "// This file is auto-generated by cbindgen. Do not edit.";

fn main() {
  let crate_dir = std::env::var("CARGO_MANIFEST_DIR").unwrap();

  let config = cbindgen::Config {
    language: cbindgen::Language::C,
    autogen_warning: Some(GENERATE_WARNING.to_string()),
    include_guard: Some("HEAPED_H".to_string()),
    enumeration: cbindgen::EnumConfig {
      rename_variants: cbindgen::RenameRule::QualifiedScreamingSnakeCase,
      prefix_with_name: true,
      ..Default::default()
    },
    braces: cbindgen::Braces::SameLine,
    line_length: 80,
    line_endings: cbindgen::LineEndingStyle::LF,
    usize_is_size_t: true,
    structure: cbindgen::StructConfig {
      rename_fields: cbindgen::RenameRule::CamelCase,
      rename_associated_constant: cbindgen::RenameRule::QualifiedScreamingSnakeCase,
      ..Default::default()
    },
    export: cbindgen::ExportConfig {
      include: vec![
        "Alloc".to_string(),
        "Layout".to_string(),
        "Slice".to_string(),
        "Option".to_string(),
        "GLOBAL_ALLOC".to_string(),
      ],
      ..Default::default()
    },
    ..Default::default()
  };

  cbindgen::generate_with_config(&crate_dir, config)
    .expect("Unable to generate bindings")
    .write_to_file("heaped.h");
}
